name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies from pyproject
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    - name: Lint with flake8
      run: flake8 crqubo/ tests/ examples/ --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Run tests with pytest
      run: pytest tests/ -v --cov=crqubo --cov-report=xml --cov-report=html --cov-report=term-missing
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        CRQUBO_USE_RETRIEVAL: 'false'
        CRQUBO_USE_VERIFICATION: 'false'
  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
    - name: Install dependencies for security
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        pip install safety bandit
    - name: Run security checks
      run: |
        safety check --json --output safety-report.json || true
        bandit -r crqubo/ -f json -o bandit-report.json || true
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
